var app=angular.module("labResults",["ngRoute","ajoslin.promise-tracker"]);app.config(["$routeProvider","$locationProvider",function(a,b){a.when("/",{templateUrl:"views/login.html",controller:"loginController"}).when("/register",{templateUrl:"views/register.html",controller:"registerController"}).when("/login",{templateUrl:"views/login.html",controller:"loginController"}).when("/patientDashboard",{templateUrl:"views/patientDashboard.html",controller:"patientDashboardController"}).when("/doctorDashboard",{templateUrl:"views/doctorDashboard.html",controller:"doctorDashboardController"}),b.html5Mode(!0)}]),app.controller("loginController",["$scope","$http","$location","AuthService","promiseTracker",function(a,b,c,d,e){var f={};a.title="Login Page",a.login=function(b){a.submitted=!0,b.$invalid||(f=a.user,d.login(f).then(function(){var a=d.getUserStatus();a.patientflag&&d.isLoggedIn?c.path("patientDashboard"):a.doctorflag&&d.isLoggedIn&&c.path("doctorDashboard")}))},a.registrationRedirect=function(){c.path("register")}}]),app.controller("patientDashboardController",["$scope","$http","$location","anchorSmoothScroll","AuthService",function(a,b,c,d,e){function f(){b.get("/patientDashboard/myFoodsList/",{params:{id:a.currentUser}}).then(function(b){a.myFoodsList=b.data})}function g(){b.get("/patientDashboard/diaryList/",{params:{id:a.currentUser.ID}}).then(function(b){a.diaryList=b.data})}function h(){b.get("/patientDashboard/libraryList/",{params:{id:a.currentUser.ID}}).then(function(b){a.libraryList=b.data})}function i(){b.get("/patientDashboard/myDoctor/",{params:{id:a.currentUser.ID}}).then(function(b){a.myDoctor=b.data})}function j(){f(),g(),h(),i()}a.myFoodsList=[],a.diaryList=[],a.libraryList=[],a.myDoctor={},a.currentUser=e.getUserStatus(),a.logout=function(){e.logout(),c.path("")},a.goTo=function(a){d.scrollTo(a)},j()}]),app.controller("doctorDashboardController",["$scope","$http","$location","$log","$timeout","anchorSmoothScroll","AuthService","promiseTracker",function(a,b,c,d,e,f,g,h){function i(){console.log("my patient list id:",a.currentUser),b.get("/doctorDashboard/myPatientList/",{params:{id:a.currentUser.id}}).then(function(b){a.myPatientList=b.data})}function j(){b.get("/doctorDashboard/managePatientsList").then(function(b){a.managePatientsList=b.data})}function k(){b.get("/doctorDashboard/resourcesList/",{params:{id:a.currentUser.id}}).then(function(b){a.resourcesList=b.data})}function l(){b.get("/doctorDashboard/encouragementList/",{params:{id:a.currentUser.id}}).then(function(b){a.encouragementList=b.data})}function m(){b.get("/doctorDashboard/doctorList").then(function(b){a.doctorList=b.data,console.log("doctor list:",a.doctorList)})}function n(){i(),j(),k(),l(),m()}a.currentUser=g.getUserStatus(),a.newDoctor={},a.preDoctor={},a.editDoctor={};var o;a.myPatientList=[],a.managePatientsList=[],a.resourcesList=[],a.encouragementList=[],a.doctorList=[],a.progress=h(),a.currentUser.adminflag&&(a.admin=!0),a.createDoctor=function(c){if(a.submitted=!0,c.$invalid)return void console.log("invalid form");var f=a.newDoctor;f.doctorflag=1,"true"===f.adminflag?f.adminflag=1:f.adminflag=0;var g=b.post("/register/addDoctor",f).success(function(b,c,e,f){200===c?(a.newDoctor=null,a.messages=f.data.firstName+" "+f.data.lastName+" has been added!",a.submitted=!1,m()):(a.messages="Oops, we received your request, but there was an error processing it.",d.error(b))}).error(function(b,c,e,f){a.progress=b,a.messages="There was a network error. Try again later.",d.error(b)})["finally"](function(){e(function(){a.messages=null},3e3)});a.progress.addPromise(g)},a.beginEdit=function(c,d){a.preDoctor={},o=d,console.log(o),"manageDoctors"===c&&b.get("/doctorDashboard/doctorGet/",{params:{id:d}}).then(function(b){a.preDoctor=b.data[0]})},a.edit=function(c,f,g){a.submitted=!0,console.log("editDoctor",a.editDoctor);var h=a.preDoctor;h.id=g,h.firstname=null!=a.editDoctor.firstname?a.editDoctor.firstname:a.preDoctor.firstname,h.lastname=null!=a.editDoctor.lastname?a.editDoctor.lastname:a.preDoctor.lastname,h.phone=null!=a.editDoctor.phone?a.editDoctor.phone:a.preDoctor.phone,h.email=null!=a.editDoctor.email?a.editDoctor.email:a.preDoctor.email,h.username=null!=a.editDoctor.username?a.editDoctor.username:a.preDoctor.username,h.doctorflag=1,"true"===a.editDoctor.adminflag?h.adminflag=1:h.adminflag=0,console.log("edit",h);var i=b.post("/doctorDashboard/doctorEdit/",h).success(function(b,c,e,f){200===c?(console.log("config",f),a.preDoctor=h,a.editDoctor={},a.messages="Changes to "+f.data.firstname+" "+f.data.lastname+" have been saved!",a.submitted=!1):(a.messages="Oops, we received your request, but there was an error processing it.",d.error(b))}).error(function(b,c,e,f){a.progress=b,a.messages="There was a network error. Try again later.",d.error(b)})["finally"](function(){m(),e(function(){a.messages=null},3e3)});a.progress.addPromise(i)},a.beginDelete=function(c,d){a.preDoctor={},o=d,console.log(o),"manageDoctors"===c&&b.get("/doctorDashboard/doctorGet/",{params:{id:d}}).then(function(b){a.preDoctor=b.data[0]})},a["delete"]=function(c,e){o={id:e},console.log("delete id:",o),"manageDoctors"===c&&(console.log("manageDoctorsDelete hit"),b.post("/doctorDashboard/doctorDelete/",o).success(function(b,c,e,f){200===c?a.preDoctor=null:(alert("Oops, we received your request, but there was an error processing it."),d.error(b))}).error(function(a,b,c,e){alert("There was a network error. Try again later."),d.error(a)})["finally"](function(){m()}))},a.logout=function(){g.logout(),c.path("")},a.goTo=function(a){f.scrollTo(a)},n()}]),app.directive("datepicker",function(){return{restrict:"A",scope:{model:"="},link:function(a,b,c){$(b).pickadate({selectMonths:!0,selectYears:100})}}}),app.directive("modalTrigger",function(){return console.log("modal hit"),{restrict:"A",scope:{model:"="},link:function(a,b,c){$(b).leanModal()}}}),app.directive("collapse",function(){return console.log("collapse hit"),{restrict:"A",scope:{model:"="},link:function(a,b,c){$(b).collapsible({accordion:!0})}}}),app.factory("AuthService",["$location","$q","$timeout","$http",function(a,b,c,d){function e(){return k}function f(){return null!==l}function g(){return k}function h(a){f=!1,k={},console.log(a);var c=b.defer();return d.post("/login",a).success(function(b,d){200===d?(console.log("success"),l=!0,k=b,c.resolve()):(console.log("error in success"),l=!1,a=null,c.reject())}).error(function(b){console.log("error in error"),l=!1,a=null,c.reject()}),c.promise}function i(){k={},l=!1;var a=b.defer();return a.promise}function j(c){var e=b.defer();return d.post("/register",c).success(function(b,c){200===c?(alert("Your account has been created. Please log in on the next screen."),a.path(""),e.resolve()):(alert("This username already exists. Please pick a new one."),e.reject())}).error(function(a){e.reject()}),e.promise}var k,l=null;return{isLoggedIn:f,getUserStatus:g,login:h,logout:i,register:j,userInfo:e,User:k}}]),app.service("anchorSmoothScroll",function(){this.scrollTo=function(a){function b(){return self.pageYOffset?self.pageYOffset:document.documentElement&&document.documentElement.scrollTop?document.documentElement.scrollTop:document.body.scrollTop?document.body.scrollTop:0}function c(a){for(var b=document.getElementById(a),c=b.offsetTop,d=b;d.offsetParent&&d.offsetParent!==document.body;)d=d.offsetParent,c+=d.offsetTop;return c}var d=b(),e=c(a),f=e>d?e-d:d-e;if(f<100)return void scrollTo(0,e);var g=Math.round(f/20);g>=20&&(g=20);var h=Math.round(f/25),i=e>d?d+h:d-h,j=0;if(e>d)for(var k=d;k<e;k+=h)setTimeout("window.scrollTo(0, "+i+")",j*g),i+=h,i>e&&(i=e),j++;else for(var k=d;k>e;k-=h)setTimeout("window.scrollTo(0, "+i+")",j*g),i-=h,i<e&&(i=e),j++}});